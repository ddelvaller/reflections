What happens when you initialize a repository? Why do you need to do it?

	Se crean los archivos (ocultos) de git en los cuales se va a 
	grabar todo el tracking de los commits y demás datos

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Stagin area es un espacio previo antes del commit, uno puede elegir que
	archivos pasan al commit en esta etapa
	El working directory es nuestra carpeta de trabajo
	El repositorio es nuestro historial de los cambios/evolución
	del proyecto en si

How can you use the staging area to make sure you have one commit per logical change?

	Puedo pasar sólo los archivos que quiero hacer commit al staging area
	con eso me aseguro que los que voy a subir forme parte del "logical change"

What are some situations when branches would be helpful in keeping your history organized?
How would branches help?

	Los branches me ayudan a experimentar o probar nuevas cosas sin alterar el código base
	Esto es especialmente útil cuando deseo probar cosas nuevas sin miedo a 
	malograr la versión "estable"

How do the diagrams help you visualize the branch structure?

	Me ayudan para saber la afinidad (parenting) que tiene el branch donde me encuentro
	con el commit inicial o mejor dicho por el commit donde empieza ese nuevo
	branch o checkout

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	Merging dos branches resulta en combinar dos branches en uno solo, uno "absorbe" al otro
	Se representa en un diagrama para ver los commits que se van a unir (desde - hasta) en un solo branch
	qué branches van a ser afectados y cuáles se dejarán intactos en este proceso

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

	PRO: que Git haga los merge automaticamente te salva mucho tiempo y esfuerzo de hacer
	el mismo trabajo que te tomaría incluso horas en segundos
	CON: hay veces que deberemos tomar una decisión porque existen un conflicto en ciertas
	partes del código que son discutibles.
	PRO of the CON: Git te señala dónde exactamente están esos conflictos para 
	directamente ir a resolverlos
